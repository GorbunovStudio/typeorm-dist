{"version":3,"sources":["../../src/decorator/transaction/TransactionRepository.ts"],"names":[],"mappings":";;AAAA,qCAAmD;AAGnD;;GAEG;AACH,+BAAsC,UAAqB;IACvD,MAAM,CAAC,UAAC,MAAc,EAAE,UAAkB,EAAE,KAAa;QACrD,IAAI,cAAwB,CAAC;QAC7B,IAAI,CAAC;YACD,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC,mBAAmB,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5F,CAAC;QAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,MAAM,IAAI,KAAK,CACX,uCAAoC,UAAU,iCAA2B,MAAM,CAAC,WAAW,CAAC,IAAI,aAAU;gBAC1G,4FAA0F;gBAC1F,0GAAwG,CAC3G,CAAC;QACN,CAAC;QAED,IAAM,IAAI,GAAsC;YAC5C,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,UAAU,YAAA;YACV,KAAK,OAAA;YACL,cAAc,gBAAA;YACd,UAAU,YAAA;SACb,CAAC;QACF,8BAAsB,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC;AACN,CAAC;AAtBD,sDAsBC","file":"TransactionRepository.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../index\";\r\nimport {TransactionRepositoryMetadataArgs} from \"../../metadata-args/TransactionRepositoryMetadataArgs\";\r\n\r\n/**\r\n * Injects transaction's repository into the method wrapped with @Transaction decorator.\r\n */\r\nexport function TransactionRepository(entityType?: Function): ParameterDecorator {\r\n    return (object: Object, methodName: string, index: number) => {\r\n        let repositoryType: Function;\r\n        try {\r\n            repositoryType = Reflect.getOwnMetadata(\"design:paramtypes\", object, methodName)[index];\r\n        } catch (err) {\r\n            throw new Error(\r\n                `Cannot get reflected type for a \"${methodName}\" method's parameter of ${object.constructor.name} class. ` +\r\n                `Make sure you have turned on an \"emitDecoratorMetadata\": true, option in tsconfig.json. ` +\r\n                `Also make sure you have imported \"reflect-metadata\" on top of the main entry file in your application.`\r\n            );\r\n        }\r\n        \r\n        const args: TransactionRepositoryMetadataArgs = {\r\n            target: object.constructor,\r\n            methodName,\r\n            index,\r\n            repositoryType,\r\n            entityType,\r\n        };\r\n        getMetadataArgsStorage().transactionRepositories.push(args);\r\n    };\r\n}\r\n"],"sourceRoot":"../.."}