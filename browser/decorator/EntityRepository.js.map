{"version":3,"sources":["../browser/src/decorator/EntityRepository.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,sBAAsB,EAAC,MAAM,UAAU,CAAC;AAGhD;;;;GAIG;AACH,MAAM,2BAA2B,MAAiB;IAC9C,MAAM,CAAC,UAAU,MAAgB;QAC7B,IAAM,IAAI,GAAiC;YACvC,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;SACjB,CAAC;QACF,sBAAsB,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC,CAAC;AACN,CAAC","file":"EntityRepository.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\r\nimport {EntityRepositoryMetadataArgs} from \"../metadata-args/EntityRepositoryMetadataArgs\";\r\n\r\n/**\r\n * Used to declare a class as a custom repository.\r\n * Custom repository can either manage some specific entity, either just be generic.\r\n * Custom repository can extend AbstractRepository or regular Repository or TreeRepository.\r\n */\r\nexport function EntityRepository(entity?: Function): Function {\r\n    return function (target: Function) {\r\n        const args: EntityRepositoryMetadataArgs = {\r\n            target: target,\r\n            entity: entity,\r\n        };\r\n        getMetadataArgsStorage().entityRepositories.push(args);\r\n    };\r\n}\r\n"],"sourceRoot":".."}