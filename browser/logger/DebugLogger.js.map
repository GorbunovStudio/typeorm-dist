{"version":3,"sources":["../browser/src/logger/DebugLogger.ts"],"names":[],"mappings":"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","file":"DebugLogger.js","sourcesContent":["import {Logger} from \"./Logger\";\r\nimport {QueryRunner} from \"../\";\r\nimport {PlatformTools} from \"../platform/PlatformTools\";\r\n\r\n/**\r\n * Performs logging of the events in TypeORM via debug library.\r\n */\r\nexport class DebugLogger implements Logger {\r\n    private debug = PlatformTools.load(\"debug\");\r\n\r\n    private debugQueryLog = this.debug(\"typeorm:query:log\");\r\n    private debugQueryError = this.debug(\"typeorm:query:error\");\r\n    private debugQuerySlow = this.debug(\"typeorm:query:slow\");\r\n    private debugSchemaBuild = this.debug(\"typeorm:schema\");\r\n    private debugMigration = this.debug(\"typeorm:migration\");\r\n    \r\n    private debugLog = this.debug(\"typeorm:log\");\r\n    private debugInfo = this.debug(\"typeorm:info\");\r\n    private debugWarn = this.debug(\"typeorm:warn\");\r\n    \r\n    /**\r\n     * Logs query and parameters used in it.\r\n     */\r\n    logQuery(query: string, parameters?: any[], queryRunner?: QueryRunner) {\r\n        if (this.debugQueryLog.enabled) {\r\n            this.debugQueryLog(PlatformTools.highlightSql(query) + \";\");\r\n            if (parameters && parameters.length) {\r\n                this.debugQueryLog(\"parameters:\", parameters);\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Logs query that failed.\r\n     */\r\n    logQueryError(error: string, query: string, parameters?: any[], queryRunner?: QueryRunner) {\r\n        if (this.debugQueryError.enabled) {\r\n            this.debugQueryError(PlatformTools.highlightSql(query) + \";\");\r\n            if (parameters && parameters.length) {\r\n                this.debugQueryError(\"parameters:\", parameters);\r\n            }\r\n            this.debugQueryError(\"error: \", error);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Logs query that is slow.\r\n     */\r\n    logQuerySlow(time: number, query: string, parameters?: any[], queryRunner?: QueryRunner) {\r\n        if (this.debugQuerySlow.enabled) {\r\n            this.debugQuerySlow(PlatformTools.highlightSql(query) + \";\");\r\n            if (parameters && parameters.length) {\r\n                this.debugQuerySlow(\"parameters:\", parameters);\r\n            }\r\n            this.debugQuerySlow(\"execution time:\", time);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Logs events from the schema build process.\r\n     */\r\n    logSchemaBuild(message: string, queryRunner?: QueryRunner) {\r\n        if (this.debugSchemaBuild.enabled) {\r\n            this.debugSchemaBuild(message);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Logs events from the migration run process.\r\n     */\r\n    logMigration(message: string, queryRunner?: QueryRunner) {\r\n        if (this.debugMigration.enabled) {\r\n            this.debugMigration(message);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Perform logging using given logger.\r\n     * Log has its own level and message.\r\n     */\r\n    log(level: \"log\" | \"info\" | \"warn\", message: any, queryRunner?: QueryRunner) {\r\n        switch (level) {\r\n            case \"log\":\r\n                if (this.debugLog.enabled) {\r\n                    this.debugLog(message);\r\n                }\r\n                break;\r\n            case \"info\":\r\n                if (this.debugInfo.enabled) {\r\n                    this.debugInfo(message);\r\n                }\r\n                break;\r\n            case \"warn\":\r\n                if (this.debugWarn.enabled) {\r\n                    this.debugWarn(message);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":".."}